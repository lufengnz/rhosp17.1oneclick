- name: Extract RHOSP director images
  ansible.builtin.unarchive:
    src: "{{ item }}"
    dest: /home/stack/images
    remote_src: yes
  loop:
    - /usr/share/rhosp-director-images/ironic-python-agent-latest.tar
    - /usr/share/rhosp-director-images/overcloud-hardened-uefi-full-latest.tar

- name: Upload overcloud images to Glance
  ansible.builtin.shell: source ~/stackrc && openstack overcloud image upload --image-path /home/stack/images/
  args:
    chdir: /home/stack
    executable: /bin/bash
  register: image_upload
  failed_when: image_upload.rc != 0

- name: Generate roles_data.yaml for Controller and Compute roles
  ansible.builtin.shell: source ~/stackrc && openstack overcloud role generate -o /home/stack/central/roles_data.yaml Controller Compute
  args:
    chdir: /home/stack
    executable: /bin/bash
  register: role_generate
  failed_when: role_generate.rc != 0

- name: Add CephOSD service to roles_data.yaml after CephRgw
  ansible.builtin.lineinfile:
    path: /home/stack/central/roles_data.yaml
    insertafter: '^\s*- OS::TripleO::Services::CephRgw'
    line: "    - OS::TripleO::Services::CephOSD"
    backup: yes
    state: present

- name: Copy default network isolation template
  ansible.builtin.copy:
    src: /usr/share/openstack-tripleo-heat-templates/network-data-samples/default-network-isolation.yaml
    dest: /home/stack/central/network_data.yaml
    remote_src: yes
    owner: stack
    group: stack
    mode: '0644'

- name: Copy default network isolation template
  ansible.builtin.copy:
    src: /usr/share/openstack-tripleo-heat-templates/network-data-samples/vip-data-default-network-isolation.yaml
    dest: /home/stack/central/vip_data.yaml
    remote_src: yes
    owner: stack
    group: stack
    mode: '0644'

- name: Update gateway_ip in network_data.yaml
  ansible.builtin.lineinfile:
    path: /home/stack/central/network_data.yaml
    regexp: '^      gateway_ip: 10.0.0.1$'
    line: '      gateway_ip: 10.0.0.254'
    backup: yes

- name: Update end IP in network_data.yaml
  ansible.builtin.lineinfile:
    path: /home/stack/central/network_data.yaml
    regexp: '^          end: 10.0.0.250$'
    line: '          end: 10.0.0.100'
    backup: yes

- name: Remove vlan 10 line from network_data.yaml
  ansible.builtin.lineinfile:
    path: /home/stack/central/network_data.yaml
    regexp: '^      vlan: 10$'
    state: absent
    backup: yes

- name: Provision overcloud networks
  ansible.builtin.shell: source ~/stackrc && openstack overcloud network provision --output /home/stack/central/overcloud-networks-deployed.yaml /home/stack/central/network_data.yaml -y
  args:
    chdir: /home/stack
    executable: /bin/bash
  register: network_provision
  failed_when: network_provision.rc != 0

- name: Ensure output file overcloud-networks-deployed.yaml exists
  ansible.builtin.stat:
    path: /home/stack/central/overcloud-networks-deployed.yaml
  register: networks_deployed
  failed_when: not networks_deployed.stat.exists 

- name: Provision overcloud networks vip
  ansible.builtin.shell: source ~/stackrc && openstack overcloud network vip provision --stack central --output /home/stack/central/overcloud-vip-deployed.yaml /home/stack/central/vip_data.yaml -y
  args:
    chdir: /home/stack
    executable: /bin/bash
  register: network_provision_vip
  failed_when: network_provision_vip.rc != 0

- name: Ensure output file overcloud-vip-deployed.yaml exists
  ansible.builtin.stat:
    path: /home/stack/central/overcloud-vip-deployed.yaml
  register: vip_deployed
  failed_when: not vip_deployed.stat.exists 

- name: Deploy two_interfaces.j2 file
  ansible.builtin.copy:
    src: two_interfaces.j2
    dest: /home/stack/central/two_interfaces.j2
    owner: stack
    group: stack
    mode: '0644'
