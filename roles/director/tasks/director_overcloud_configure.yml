- name: Set root device size for controller nodes
  ansible.builtin.shell: source ~/stackrc && openstack baremetal node set --property root_device='{"size": "100"}' {{ item }}
  become: yes
  become_user: stack
  args:
    chdir: /home/stack
    executable: /bin/bash
  loop: "{{ controller_names }}"
  register: root_device_result
  failed_when: root_device_result.rc != 0

- name: Update nodes properties
  ansible.builtin.shell: |
    source ~/stackrc
    openstack baremetal node list -f value -c UUID | while read NODE; do
      openstack baremetal node set --property capabilities="boot_mode:bios,$(openstack baremetal node show $NODE -f json -c properties | jq -r .properties.capabilities | sed 's/boot_mode:[^,]*,//g')" $NODE
    done
  become: yes
  become_user: stack
  args:
    chdir: /home/stack
    executable: /bin/bash
  register: update_property_result
  failed_when: update_property_result.rc != 0

- name: Copy overcloud-baremetal-deploy.yaml file
  ansible.builtin.copy:
    src: overcloud-baremetal-deploy.yaml
    dest: /home/stack/central/overcloud-baremetal-deploy.yaml
    owner: stack
    group: stack
    mode: '0644'

- name: Overcloud node provision
  ansible.builtin.shell: source ~/stackrc && openstack overcloud node provision --stack central --network-config --output /home/stack/central/overcloud-baremetal-deployed.yaml /home/stack/central/overcloud-baremetal-deploy.yaml
  become: yes
  become_user: stack
  args:
    chdir: /home/stack
    executable: /bin/bash
  register: overcloud_node_provision
  failed_when: overcloud_node_provision.rc != 0

- name: Overcloud node provision
  ansible.builtin.shell: source ~/stackrc && openstack tripleo container image prepare -e ~/containers-prepare-parameter.yaml
  become: yes
  become_user: stack
  args:
    chdir: /home/stack
    executable: /bin/bash
  register: container_image_prepare
  failed_when: container_image_prepare.rc != 0

- name: Copy files
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/home/stack/central/{{ item }}"
    owner: stack
    group: stack
    mode: '0644'
  loop:
    - ironic-overrides.yaml
    - site-name.yaml
    - node-info.yaml
    - ceph-config.yaml
    - initial-ceph.conf
    - glance.yaml

- name: Deploy Ceph cluster
  ansible.builtin.shell: |
    source ~/stackrc
    openstack overcloud ceph deploy \
    --stack central \
    --cluster central \
    --config /home/stack/central/initial-ceph.conf \
    -o /home/stack/central/deployed_ceph.yaml \
    --network-data /home/stack/central/network_data.yaml \
    --roles-data /home/stack/central/roles_data.yaml \
    --container-image-prepare /home/stack/containers-prepare-parameter.yaml \
    /home/stack/central/overcloud-baremetal-deployed.yaml \
    --ntp-server 10.0.0.200
  become: yes
  become_user: stack
  args:
    chdir: /home/stack
    executable: /bin/bash
  register: ceph_deploy
  failed_when: ceph_deploy.rc != 0

- name: Check /etc/pki/ca-trust/source/anchors/cm-local-ca.pem file exists
  ansible.builtin.stat:
    path: /etc/pki/ca-trust/source/anchors/cm-local-ca.pem
  register: cm_local_ca_pem
  failed_when: not cm_local_ca_pem.stat.exists

- name: Get CA certificate content
  ansible.builtin.command: awk '/BEGIN CERTIFICATE/,/END CERTIFICATE/' /etc/pki/ca-trust/source/anchors/cm-local-ca.pem
  register: ca_cert_content
  changed_when: false

- name: Create inject-trust-anchor-hiera.yaml
  ansible.builtin.copy:
    content: |
      parameter_defaults:
        CAMap:
          undercloud-ca:
            content: |
      {{ ca_cert_content.stdout_lines | map('regex_replace', '^(.*)$', '        \\1') | join('\n') }}
    dest: /home/stack/central/inject-trust-anchor-hiera.yaml
    owner: stack
    group: stack
    mode: '0644'

- name: Copy overcloud_deploy.sh file
  ansible.builtin.copy:
    src: overcloud_deploy.sh
    dest: /home/stack/central/overcloud_deploy.sh
    owner: stack
    group: stack
    mode: '0755'

- name: Run overcloud deployment script with stackrc environment
  ansible.builtin.shell: source ~/stackrc && ./central/overcloud_deploy.sh
  become: yes
  become_user: stack
  args:
    chdir: /home/stack
    executable: /bin/bash
  register: overcloud_deploy
  failed_when: overcloud_deploy.rc != 0
  
