- name: Check if kcli plans already exist
  ansible.builtin.shell: kcli list plan -o name
  register: plan_check
  changed_when: false
  failed_when: false

- name: Deploy VM plans
  when: "item not in plan_check.stdout_lines"
  block:
    - name: Render {{ item }} plan
      ansible.builtin.template:
        src: "plan-{{ item }}.yml.j2"
        dest: "/root/{{ item }}.yml"
        mode: '0600'

    - name: Create {{ item }} plan
      ansible.builtin.command: "kcli create plan -f /root/{{ item }}.yml {{ item }}"
      no_log: true

  loop:
    - director-plan
    - idm-plan
    - controllers-plan
    - compute-plan

- name: Start VMs and update /etc/hosts
  loop:
    - director
    - idm
  block:
    - name: Check {{ item }} VM running status
      ansible.builtin.shell: kcli show vm {{ item }} -f status
      register: vm_status
      changed_when: false

    - name: Start {{ item }} VM if not running
      when: vm_status.stdout != "status: up"
      ansible.builtin.command: kcli start vm {{ item }}
      register: start_vm_result
      failed_when: start_vm_result.rc != 0

    - name: Get {{ item }} VM IP address
      ansible.builtin.command: kcli show vm {{ item }} -f ip
      register: vm_ip_result
      changed_when: false
      retries: 12
      delay: 10
      until: >
        vm_ip_result.stdout is defined and
        vm_ip_result.stdout != "" and
        vm_ip_result.stdout != "null" and
        vm_ip_result.stdout is match("^[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}$")

    - name: Append {{ item }} IP and hostname to /etc/hosts
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "{{ vm_ip_result.stdout }} {{ item }}"
        state: present
        backup: yes
      when: vm_ip_result.stdout is match("^[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}$")